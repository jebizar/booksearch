{"version":3,"sources":["components/container/index.js","components/header/index.js","components/search/index.js","components/results/index.js","utils/API.js","pages/books.js","App.js","registerServiceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","className","children","Header","Search","for","type","id","placeholder","onChange","handleInputChange","value","name","onClick","handleFormSubmit","Results","src","image","alt","title","author","date","href","link","save","API","searchBooks","q","axios","get","savedBooks","delete","saves","post","Books","state","books","search","query","then","res","_this","setState","data","items","console","log","catch","err","e","_e$target","target","Object","defineProperty","preventDefault","saveBook","book","alert","_this2","this","container","header","map","results","key","volumeInfo","infoLink","authors","join","imageLinks","thumbnail","Component","App","BrowserRouter","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b0f8cced.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n//stateless component\r\nconst Container = props => <div className=\"container\">{props.children}</div>;\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className = \"jumbotron\">\r\n            <h1 className = \"text-center\">Google Books Search</h1>\r\n            <h2 className = \"text-center\">Search and Save Books</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"search\">Search</label>\r\n                <input type=\"text \" className=\"form-control\" id=\"search\" placeholder=\"Search query\" onChange={props.handleInputChange} value = {props.value} name = \"search\"/>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\" onClick = {props.handleFormSubmit}>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nfunction Results(props) {\r\n    return(\r\n        <li>\r\n            <img src = {props.image} alt = {props.title}/>\r\n            <p> {props.title} </p>\r\n            <p> {props.author} </p>\r\n            <p> {props.date}</p>\r\n            <a href = {props.link}>{props.link}</a>\r\n            <button onClick = {props.save}> Save book</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Results;","import axios from \"axios\";\r\nconst URL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n\r\nexport default {\r\n\r\n    searchBooks: q => axios.get(URL + q),\r\n\r\n    savedBooks: () => axios.get(\"/api/saved\"),\r\n\r\n    delete: title => axios.delete(\"/api/books/\" + title),\r\n\r\n    saves: title => axios.post(\"/api/books\", title)\r\n}","import React, { Component } from \"react\";\r\nimport Container from \"../components/container\";\r\nimport Header from \"../components/header\";\r\nimport Search from \"../components/search\";\r\nimport Results from \"../components/results\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Books extends Component {\r\n    state = {\r\n        books:[],\r\n        search:\"\"\r\n    }\r\n\r\n    searchBooks = query => {\r\n        API.searchBooks(query)\r\n          .then(res =>\r\n            this.setState(\r\n              {\r\n                books: res.data.items,\r\n              },\r\n              console.log(res.data.items)\r\n            )\r\n          )\r\n          .catch(err => console.log(err));\r\n      };\r\n\r\n    handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    this.searchBooks(this.state.search);\r\n  };\r\n\r\n  saveBook = book => {\r\n    API.saves(book)\r\n      .then(res => alert(\"Book Saved!\"))\r\n      .catch(err => console.log(err));\r\n  };\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Header/>\r\n                <Search handleInputChange={this.handleInputChange} handleFormSubmit = {this.handleFormSubmit} value = {this.state.search}/>\r\n                <ul>\r\n                {this.state.books.map(book => (\r\n                    <Results\r\n                      key={book.id}\r\n                      title={book.volumeInfo.title}\r\n                      link={book.volumeInfo.infoLink}\r\n                      author={book.volumeInfo.authors.join(\", \")}\r\n                      image={book.volumeInfo.imageLinks.thumbnail}\r\n                      save = {() => this.saveBook({\r\n                        title:book.volumeInfo.title,\r\n                        link:book.volumeInfo.infoLink,\r\n                        author:book.volumeInfo.authors.join(\", \"),\r\n                        image:book.volumeInfo.imageLinks.thumbnail,\r\n                      })}\r\n                    />\r\n                  ))}\r\n                </ul>\r\n            </Container>\r\n        )}\r\n}\r\n\r\nexport default Books;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Books from \"./pages/books\";\r\n\r\nfunction App() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Books}/>\r\n        </Switch>\r\n      </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}